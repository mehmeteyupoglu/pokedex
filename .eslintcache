[{"C:\\Users\\YCP\\Desktop\\pokedex\\src\\reportWebVitals.js":"1","C:\\Users\\YCP\\Desktop\\pokedex\\src\\App.js":"2","C:\\Users\\YCP\\Desktop\\pokedex\\src\\components\\pokedex.js":"3","C:\\Users\\YCP\\Desktop\\pokedex\\src\\index.js":"4","C:\\Users\\YCP\\Desktop\\pokedex\\src\\helper\\pokemonFunctions.js":"5","C:\\Users\\YCP\\Desktop\\pokedex\\src\\components\\Pokedex.js":"6","C:\\Users\\YCP\\Desktop\\pokedex\\src\\components\\Navbar.js":"7","C:\\Users\\YCP\\Desktop\\pokedex\\src\\redux\\store.js":"8","C:\\Users\\YCP\\Desktop\\pokedex\\src\\containers\\Home\\Home.js":"9","C:\\Users\\YCP\\Desktop\\pokedex\\src\\containers\\CaughtPokemons\\CaughtPokemons.js":"10","C:\\Users\\YCP\\Desktop\\pokedex\\src\\components\\Caught.js":"11","C:\\Users\\YCP\\Desktop\\pokedex\\src\\components\\style.js":"12","C:\\Users\\YCP\\Desktop\\pokedex\\src\\redux\\reducers\\pokeReducer.js":"13","C:\\Users\\YCP\\Desktop\\pokedex\\src\\redux\\reducers\\appReducer.js":"14","C:\\Users\\YCP\\Desktop\\pokedex\\src\\appStyle.js":"15","C:\\Users\\YCP\\Desktop\\pokedex\\src\\redux\\localStorage.js":"16"},{"size":362,"mtime":1608741319619,"results":"17","hashOfConfig":"18"},{"size":751,"mtime":1608914707924,"results":"19","hashOfConfig":"18"},{"size":7293,"mtime":1608921139312,"results":"20","hashOfConfig":"18"},{"size":812,"mtime":1608803001229,"results":"21","hashOfConfig":"18"},{"size":1650,"mtime":1608884302443,"results":"22","hashOfConfig":"18"},{"size":7293,"mtime":1608921139312,"results":"23","hashOfConfig":"18"},{"size":2354,"mtime":1608921992193,"results":"24","hashOfConfig":"18"},{"size":697,"mtime":1608908312690,"results":"25","hashOfConfig":"18"},{"size":1642,"mtime":1608920830563,"results":"26","hashOfConfig":"18"},{"size":301,"mtime":1608921157024,"results":"27","hashOfConfig":"18"},{"size":5295,"mtime":1608906188694,"results":"28","hashOfConfig":"18"},{"size":1224,"mtime":1608912786990,"results":"29","hashOfConfig":"18"},{"size":1430,"mtime":1608888801047,"results":"30","hashOfConfig":"18"},{"size":284,"mtime":1608906092546,"results":"31","hashOfConfig":"18"},{"size":196,"mtime":1608891650722,"results":"32","hashOfConfig":"18"},{"size":467,"mtime":1608903564625,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17d56ka",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\YCP\\Desktop\\pokedex\\src\\reportWebVitals.js",[],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\App.js",[],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\components\\pokedex.js",[],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\index.js",[],["69","70"],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\helper\\pokemonFunctions.js",["71","72"],"export async function getAllPokemon(url) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        resolve(data);\r\n      });\r\n  });\r\n}\r\n\r\nexport async function getIndividualPokemons(url) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        resolve(data);\r\n      });\r\n  });\r\n}\r\n\r\nexport function filterPokemons(id, pokemons) {\r\n  const filteredPokemons = pokemons.filter((item) => {\r\n    return item.id === id;\r\n  });\r\n}\r\n\r\nexport const renderAbilities = (arr, index) => {\r\n  if (arr.length > 0) {\r\n    let abilities = arr.map((item) => {\r\n      return item.ability.name;\r\n    });\r\n\r\n    return abilities.join(\", \");\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const renderTypes = (arr, index) => {\r\n  if (arr.length) {\r\n    let types = arr.map((item) => {\r\n      return item.type.name;\r\n    });\r\n\r\n    return types.join(\", \");\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const renderMoves = (arr, index) => {\r\n  if (arr.length) {\r\n    let moves = arr.map((item) => {\r\n      return item.move.name;\r\n    });\r\n\r\n    return moves.join(\", \");\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const check = (id, pokemonStore) => {\r\n  var found = false;\r\n  for (var i = 0; i < pokemonStore.length; i++) {\r\n    if (pokemonStore[i].id == id) {\r\n      found = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return found;\r\n};\r\n\r\nexport const catchAndRelease = {\r\n  catch: {\r\n    type: \"CATCH_POKEMON\",\r\n    color: \"success\",\r\n    text: \"Catch\",\r\n  },\r\n  release: {\r\n    type: \"RELEASE_POKEMON\",\r\n    color: \"info\",\r\n    text: \"Release\",\r\n  },\r\n};\r\n","C:\\Users\\YCP\\Desktop\\pokedex\\src\\components\\Pokedex.js",[],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\components\\Navbar.js",["73","74","75"],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\redux\\store.js",[],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\containers\\Home\\Home.js",[],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\containers\\CaughtPokemons\\CaughtPokemons.js",[],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\components\\Caught.js",["76","77"],"// Import packages\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  Alert,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n} from \"reactstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// Import local files\r\nimport { renderAbilities, catchAndRelease } from \"../helper/pokemonFunctions\";\r\nimport poke from \"../assets/pokemon.png\";\r\nimport { cardStyle, darkCardStyle, styledButton } from \"./style\";\r\n\r\nexport default function Caught() {\r\n  const pokemonStore = useSelector((state) => state.pokemonReducer);\r\n  const isDark = useSelector((state) => state.appReducer.isDark);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <hr color={isDark ? \"#505863\" : null} />\r\n      {pokemonStore.length < 1 ? (\r\n        <h4>\r\n          There is currently no pokemons here.{\" \"}\r\n          <span tag={Link} to=\"/\">\r\n            Go and catch\r\n          </span>{\" \"}\r\n          some.\r\n        </h4>\r\n      ) : (\r\n        <Row className=\"d-flex flex-wrap\">\r\n          {pokemonStore.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <Col>\r\n                  <Card style={isDark ? darkCardStyle : cardStyle}>\r\n                    <CardBody\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Alert color={isDark ? \"secondary\" : \"info\"}>\r\n                        <img width=\"30%\" src={poke} alt={item.name} />\r\n                      </Alert>\r\n                    </CardBody>\r\n                    <CardBody>\r\n                      <CardSubtitle\r\n                        tag=\"h6\"\r\n                        className=\"mb-2 text-muted text-capitalize\"\r\n                      >\r\n                        {item.name}\r\n                      </CardSubtitle>\r\n                    </CardBody>\r\n\r\n                    <img\r\n                      width=\"60%\"\r\n                      src={item.img}\r\n                      alt={`Pokemon: ${item.name}`}\r\n                      className=\"rounded\"\r\n                      style={{\r\n                        margin: \"auto\",\r\n                        border: \"1px solid \",\r\n                        borderColor: isDark ? \"#505863\" : \"rgb(0 0 0 / 13%)\",\r\n                      }}\r\n                    />\r\n                    <CardBody\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                      tag=\"h6\"\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          fontSize: \"1em\",\r\n                        }}\r\n                        className=\"blockquote \"\r\n                      >\r\n                        <p>\r\n                          <strong>Weight: </strong>\r\n                          {item.weight}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Height: </strong>\r\n                          {item.height}\r\n                        </p>\r\n                        <p className=\"text-capitalize\">\r\n                          <strong>Abilities: </strong>\r\n                          {renderAbilities(item.abilities)}\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          color={catchAndRelease.release.color}\r\n                          size=\"sm\"\r\n                          onClick={() =>\r\n                            dispatch({\r\n                              type: \"RELEASE_POKEMON\",\r\n                              payload: item.id,\r\n                            })\r\n                          }\r\n                        >\r\n                          Release\r\n                        </Button>\r\n                        <div\r\n                          style={styledButton()}\r\n                          onClick={() => {\r\n                            dispatch({\r\n                              type: item.isFavorite\r\n                                ? \"REMOVE_FROM_FAVORITES\"\r\n                                : \"ADD_TO_FAVORITES\",\r\n                              payload: item.id,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon\r\n                            icon={faStar}\r\n                            color={item.isFavorite ? \"orange\" : \"gray\"}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              </div>\r\n            );\r\n          })}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\YCP\\Desktop\\pokedex\\src\\components\\style.js",[],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\redux\\reducers\\pokeReducer.js",[],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\redux\\reducers\\appReducer.js",[],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\appStyle.js",[],"C:\\Users\\YCP\\Desktop\\pokedex\\src\\redux\\localStorage.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":22,"column":9,"nodeType":"84","messageId":"85","endLine":22,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":65,"column":28,"nodeType":"88","messageId":"89","endLine":65,"endColumn":30},{"ruleId":"82","severity":1,"message":"90","line":11,"column":10,"nodeType":"84","messageId":"85","endLine":11,"endColumn":14},{"ruleId":"82","severity":1,"message":"91","line":11,"column":16,"nodeType":"84","messageId":"85","endLine":11,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":26,"column":13,"nodeType":"94","endLine":26,"endColumn":40},{"ruleId":"82","severity":1,"message":"95","line":3,"column":17,"nodeType":"84","messageId":"85","endLine":3,"endColumn":25},{"ruleId":"82","severity":1,"message":"96","line":13,"column":3,"nodeType":"84","messageId":"85","endLine":13,"endColumn":8},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'filteredPokemons' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'dark' is assigned a value but never used.","'setDark' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]